/*
 * LICENSE WARNING
 *
 * These files are from the [polygon-hermez zkEVM project](https://github.com/0xPolygonHermez/zkevm-proverjs)
 * and were developed by Polygon. They are not covered by the MIT license of this repository.
 * All rights reserved by Polygon.
 */

constant %N = 2**20;

namespace Global(%N);
    col fixed L1 = [1] + [0]*;
    col fixed LLAST(i) { if i == %N - 1 { 1 } else { 0 } };
    col fixed BYTE(i) { i & 0xff };
    col fixed BYTE2(i) { i & 0xffff };
    col fixed BYTE_2A(i) { (i & 0xffff) >> 8 };
    // TODO it might be confusing to remember which one is the array index
    // and which one is the polynomial parameter.
    // Here, k is the array index and i is the polynomial parameter.

    // TODO
    //col fixed CLK32[32](k, i) { one_hot(i, i % 32 == k) };

// TODO
//    col fixed BYTE_FACTOR[8](k i) { ((i >> 2) & 0x07) == index ? [1n, 256n, 256n**2n, 256n**3n][i % 4]:0n };
    // [0] = 1,256,256**2,256**3, 0:28 (cyclic)
                                  // [1] = 0:4, 1,256,256**2,256**3, 0:24 (cyclic)
                                  // [7] = 0:28, 1,256,256**2,256**3 (cyclic)

    col fixed STEP(i) { i };  // 0, 1, 2, 3, ...... N-1

    col fixed STEP32(i) { i % 32 };

