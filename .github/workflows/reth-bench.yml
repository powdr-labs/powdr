on:
  workflow_dispatch:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"
  JEMALLOC_SYS_WITH_MALLOC_CONF: "retain:true,background_thread:true,metadata_thp:always,thp:always,dirty_decay_ms:-1,muzzy_decay_ms:-1,abort_conf:true"
  POWDR_OPENVM_SEGMENT_DELTA: 10000

jobs:
  test_apc:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: âš¡ Cache rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.toml') }}
      - name: Build
        run: cargo build --release -p powdr-openvm
      - name: Run tests
        run: cargo test --release --verbose -p powdr-openvm -- --include-ignored --nocapture --test-threads=1

      - name: Install cargo openvm
        run: cargo install --git 'http://github.com/powdr-labs/openvm.git' --rev 815b3cc cargo-openvm

      - name: Checkout openvm-reth-benchmark
        uses: actions/checkout@v4
        with:
          repository: powdr-labs/openvm-reth-benchmark
          ref: main
          path: openvm-reth-benchmark

      - name: Patch openvm-reth-benchmark to use local powdr
        run: |
          cd openvm-reth-benchmark
          mkdir -p .cargo
          echo '[patch."https://github.com/powdr-labs/powdr.git"]' > .cargo/config.toml
          echo 'powdr-openvm = { path = "../openvm" }' >> .cargo/config.toml
          echo 'powdr-riscv-elf = { path = "../riscv-elf" }' >> .cargo/config.toml
          echo 'powdr-number = { path = "../number" }' >> .cargo/config.toml
          echo 'powdr-autoprecompiles = { path = "../autoprecompiles" }' >> .cargo/config.toml

      - name: Setup python venv
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r openvm/scripts/requirements.txt
          pip install psrecord   # for monitoring memory usage

      - name: Run small execution test with APCs
        run: |
          source .venv/bin/activate
          cd openvm-reth-benchmark
          echo "export RPC_1=${{ secrets.RPC_1 }}" >> .env
          MODE="execute" APC=500 psrecord --interval 1 --log psrecord.csv --log-format csv --plot psrecord.png "./run.sh"
          echo "openvm-reth-benchmark: $(git rev-parse HEAD)" > rev.txt
          echo "powdr: $(git -C .. rev-parse HEAD)" >> rev.txt
          python ../openvm/scripts/basic_metrics.py metrics.json > basic.txt
          python ../openvm/scripts/basic_metrics.py --csv metrics.json > basic.csv
          python ../openvm/scripts/plot_trace_cells.py -o trace_cells.png metrics.json > trace_cells.txt

      - name: upload results
        uses: actions/upload-artifact@v4
        with:
          name: reth-results
          path: |
            openvm-reth-benchmark/rev.txt
            openvm-reth-benchmark/metrics.json
            openvm-reth-benchmark/psrecord.csv
            openvm-reth-benchmark/psrecord.png
            openvm-reth-benchmark/basic.txt
            openvm-reth-benchmark/basic.csv
            openvm-reth-benchmark/trace_cells.txt
            openvm-reth-benchmark/trace_cells.png
