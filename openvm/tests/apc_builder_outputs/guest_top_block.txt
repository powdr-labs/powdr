Instructions:
  ADD rd_ptr = 8, rs1_ptr = 8, rs2 = 16777200, rs2_as = 0
  STOREW rd_rs2_ptr = 4, rs1_ptr = 8, imm = 12, mem_as = 2, needs_write = 1, imm_sign = 0
  AUIPC 4 0 0 1 0
  JALR 4 4 1780 1 0

APC advantage:
  - Main columns: 125 -> 34 (3.68x reduction)
  - Bus interactions: 65 -> 24 (2.71x reduction)
  - Constraints: 61 -> 19 (3.21x reduction)

// Symbolic machine using 34 unique main columns

// Bus 0 (EXECUTION_BRIDGE):
mult=is_valid * -1, args=[0, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 - 6]
mult=is_valid * 1, args=[2 * to_pc_limbs__0_3 + 65536 * to_pc_limbs__1_3, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 + 3]

// Bus 1 (MEMORY):
mult=is_valid * -1, args=[1, 8, b__0_0, b__1_0, b__2_0, b__3_0, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 - (reads_aux__0__base__timestamp_lt_aux__lower_decomp__0_0 + 131072 * reads_aux__0__base__timestamp_lt_aux__lower_decomp__1_0 + 7)]
mult=is_valid * 1, args=[1, 8, rs1_data__0_1, rs1_data__1_1, rs1_data__2_1, rs1_data__3_1, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 - 3]
mult=is_valid * -1, args=[1, 4, rd_aux_cols__prev_data__0_2, rd_aux_cols__prev_data__1_2, rd_aux_cols__prev_data__2_2, rd_aux_cols__prev_data__3_2, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 - (read_data_aux__base__timestamp_lt_aux__lower_decomp__0_1 + 131072 * read_data_aux__base__timestamp_lt_aux__lower_decomp__1_1 + 3)]
mult=is_valid * -1, args=[2, mem_ptr_limbs__0_1 + 65536 * mem_ptr_limbs__1_1, prev_data__0_1, prev_data__1_1, prev_data__2_1, prev_data__3_1, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 - (write_base_aux__timestamp_lt_aux__lower_decomp__0_1 + 131072 * write_base_aux__timestamp_lt_aux__lower_decomp__1_1 + 2)]
mult=is_valid * 1, args=[2, mem_ptr_limbs__0_1 + 65536 * mem_ptr_limbs__1_1, rd_aux_cols__prev_data__0_2, rd_aux_cols__prev_data__1_2, rd_aux_cols__prev_data__2_2, rd_aux_cols__prev_data__3_2, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 - 1]
mult=is_valid * 1, args=[1, 4, 8, 0, 0, 0, rs1_aux_cols__base__prev_timestamp_3 + rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3 + 131072 * rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3 + 1]

// Bus 3 (VARIABLE_RANGE_CHECKER):
mult=is_valid * 1, args=[reads_aux__0__base__timestamp_lt_aux__lower_decomp__0_0, 17]
mult=is_valid * 1, args=[reads_aux__0__base__timestamp_lt_aux__lower_decomp__1_0, 12]
mult=is_valid * 1, args=[-(503316480 * mem_ptr_limbs__0_1), 14]
mult=is_valid * 1, args=[mem_ptr_limbs__1_1, 13]
mult=is_valid * 1, args=[read_data_aux__base__timestamp_lt_aux__lower_decomp__0_1, 17]
mult=is_valid * 1, args=[read_data_aux__base__timestamp_lt_aux__lower_decomp__1_1, 12]
mult=is_valid * 1, args=[write_base_aux__timestamp_lt_aux__lower_decomp__0_1, 17]
mult=is_valid * 1, args=[write_base_aux__timestamp_lt_aux__lower_decomp__1_1, 12]
mult=is_valid * 1, args=[to_pc_limbs__1_3, 14]
mult=is_valid * 1, args=[to_pc_limbs__0_3, 15]
mult=is_valid * 1, args=[rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__0_3, 17]
mult=is_valid * 1, args=[rs1_aux_cols__base__timestamp_lt_aux__lower_decomp__1_3, 12]

// Bus 6 (OPENVM_BITWISE_LOOKUP):
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__0_1 + (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0) * b__0_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__0_1 + 240 * opcode_xor_flag_0 + 240 * opcode_or_flag_0 + 240 * opcode_and_flag_0, opcode_xor_flag_0 * rs1_data__0_1 + opcode_or_flag_0 * (2 * rs1_data__0_1 - (b__0_0 + 240)) + opcode_and_flag_0 * (b__0_0 + 240 - 2 * rs1_data__0_1), 1]
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__1_1 + (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0) * b__1_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__1_1 + 255 * opcode_xor_flag_0 + 255 * opcode_or_flag_0 + 255 * opcode_and_flag_0, opcode_xor_flag_0 * rs1_data__1_1 + opcode_or_flag_0 * (2 * rs1_data__1_1 - (b__1_0 + 255)) + opcode_and_flag_0 * (b__1_0 + 255 - 2 * rs1_data__1_1), 1]
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__2_1 + (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0) * b__2_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__2_1 + 255 * opcode_xor_flag_0 + 255 * opcode_or_flag_0 + 255 * opcode_and_flag_0, opcode_xor_flag_0 * rs1_data__2_1 + opcode_or_flag_0 * (2 * rs1_data__2_1 - (b__2_0 + 255)) + opcode_and_flag_0 * (b__2_0 + 255 - 2 * rs1_data__2_1), 1]
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__3_1 + (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0) * b__3_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * rs1_data__3_1 + 255 * opcode_xor_flag_0 + 255 * opcode_or_flag_0 + 255 * opcode_and_flag_0, opcode_xor_flag_0 * rs1_data__3_1 + opcode_or_flag_0 * (2 * rs1_data__3_1 - (b__3_0 + 255)) + opcode_and_flag_0 * (b__3_0 + 255 - 2 * rs1_data__3_1), 1]

// Algebraic constraints:
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 + 1) * (opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0) = 0
(2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0) * (2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0 + 1) = 0
opcode_xor_flag_0 * (opcode_xor_flag_0 - 1) = 0
opcode_or_flag_0 * (opcode_or_flag_0 - 1) = 0
opcode_and_flag_0 * (opcode_and_flag_0 - 1) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 + 1 * is_valid) * ((7864320 * rs1_data__0_1 + 125829121 - 7864320 * b__0_0) * (7864320 * rs1_data__0_1 + 125829120 - 7864320 * b__0_0)) = 0
-((2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0) * ((7864320 * b__0_0 + 125829121 - 7864320 * rs1_data__0_1) * (7864320 * b__0_0 + 125829120 - 7864320 * rs1_data__0_1))) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 + 1 * is_valid) * ((30720 * rs1_data__0_1 + 7864320 * rs1_data__1_1 + 491521 - (30720 * b__0_0 + 7864320 * b__1_0)) * (30720 * rs1_data__0_1 + 7864320 * rs1_data__1_1 + 491520 - (30720 * b__0_0 + 7864320 * b__1_0))) = 0
-((2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0) * ((30720 * b__0_0 + 7864320 * b__1_0 + 491521 - (30720 * rs1_data__0_1 + 7864320 * rs1_data__1_1)) * (30720 * b__0_0 + 7864320 * b__1_0 + 491520 - (30720 * rs1_data__0_1 + 7864320 * rs1_data__1_1)))) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 + 1 * is_valid) * ((120 * rs1_data__0_1 + 30720 * rs1_data__1_1 + 7864320 * rs1_data__2_1 + 1921 - (120 * b__0_0 + 30720 * b__1_0 + 7864320 * b__2_0)) * (120 * rs1_data__0_1 + 30720 * rs1_data__1_1 + 7864320 * rs1_data__2_1 + 1920 - (120 * b__0_0 + 30720 * b__1_0 + 7864320 * b__2_0))) = 0
-((2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0) * ((120 * b__0_0 + 30720 * b__1_0 + 7864320 * b__2_0 + 1921 - (120 * rs1_data__0_1 + 30720 * rs1_data__1_1 + 7864320 * rs1_data__2_1)) * (120 * b__0_0 + 30720 * b__1_0 + 7864320 * b__2_0 + 1920 - (120 * rs1_data__0_1 + 30720 * rs1_data__1_1 + 7864320 * rs1_data__2_1)))) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 + 1 * is_valid) * ((943718400 * b__0_0 + 120 * rs1_data__1_1 + 30720 * rs1_data__2_1 + 7864320 * rs1_data__3_1 - (120 * b__1_0 + 30720 * b__2_0 + 7864320 * b__3_0 + 943718400 * rs1_data__0_1 + 1006632952)) * (943718400 * b__0_0 + 120 * rs1_data__1_1 + 30720 * rs1_data__2_1 + 7864320 * rs1_data__3_1 - (120 * b__1_0 + 30720 * b__2_0 + 7864320 * b__3_0 + 943718400 * rs1_data__0_1 + 1006632953))) = 0
-((2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0) * ((120 * b__1_0 + 30720 * b__2_0 + 7864320 * b__3_0 + 943718400 * rs1_data__0_1 - (943718400 * b__0_0 + 120 * rs1_data__1_1 + 30720 * rs1_data__2_1 + 7864320 * rs1_data__3_1 + 1006632952)) * (120 * b__1_0 + 30720 * b__2_0 + 7864320 * b__3_0 + 943718400 * rs1_data__0_1 - (943718400 * b__0_0 + 120 * rs1_data__1_1 + 30720 * rs1_data__2_1 + 7864320 * rs1_data__3_1 + 1006632953)))) = 0
(30720 * mem_ptr_limbs__0_1 - (30720 * rs1_data__0_1 + 7864320 * rs1_data__1_1 + 368640 * is_valid)) * (30720 * mem_ptr_limbs__0_1 - (30720 * rs1_data__0_1 + 7864320 * rs1_data__1_1 + 368641)) = 0
(943718400 * rs1_data__0_1 + 30720 * mem_ptr_limbs__1_1 - (120 * rs1_data__1_1 + 30720 * rs1_data__2_1 + 7864320 * rs1_data__3_1 + 943718400 * mem_ptr_limbs__0_1 + 754974726 * is_valid)) * (943718400 * rs1_data__0_1 + 30720 * mem_ptr_limbs__1_1 - (120 * rs1_data__1_1 + 30720 * rs1_data__2_1 + 7864320 * rs1_data__3_1 + 943718400 * mem_ptr_limbs__0_1 + 754974727)) = 0
to_pc_least_sig_bit_3 * (to_pc_least_sig_bit_3 - 1) = 0
(30720 * to_pc_least_sig_bit_3 + 61440 * to_pc_limbs__0_3 - 54927360 * is_valid) * (30720 * to_pc_least_sig_bit_3 + 61440 * to_pc_limbs__0_3 - 54927361) = 0
(125829121 * to_pc_limbs__0_3 + 30720 * to_pc_limbs__1_3 + 251657402 * is_valid - 943718400 * to_pc_least_sig_bit_3) * (125829121 * to_pc_limbs__0_3 + 30720 * to_pc_limbs__1_3 + 251657401 - 943718400 * to_pc_least_sig_bit_3) = 0
is_valid * (is_valid - 1) = 0