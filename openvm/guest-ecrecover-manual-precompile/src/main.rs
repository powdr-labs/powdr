use revm_precompile::secp256k1::ec_recover_run;
#[allow(unused_imports)]
use k256::Secp256k1Point;

openvm::init!();
openvm::entry!(main);

fn main() {
    let inputs = [
        hex::decode("d48f7d08e520977994089db59a1969aff6f601667ffcd96e8a93d68a5625d9fa000000000000000000000000000000000000000000000000000000000000001cb8833df2a07aedb95cd1b9626192385559ffb2bb517781e87b747edaf93da7ef04d0ef857f02bca86f0e29dcbaa5ba02e40f106737b76efd9e10803b8fa9ab32").unwrap(),
        hex::decode("4be043ac0726265c1daab4fce1eef321f7cfb414f2951070e3751d79d74fa0e3000000000000000000000000000000000000000000000000000000000000001ca2655aaad460fe9e72c71e6abff578dd57d49323e321924f8e87cd8aedcbb53943c54b178297a85427c11268c8b5406137a728fec2b97b962aaa0e9190a5bed9").unwrap(),
        hex::decode("f1af014411fe3809093365b92fc22e57c055502169dd26805dc3673ef6e7b40b000000000000000000000000000000000000000000000000000000000000001c6de67a22aaa0a3f9ed9b52bec07c0ad125d429987e162dce58e136f054b353682d631ab7019a4cbaed64206369417ee6405c9d7bd372e13cf03ca77fabd6a97a").unwrap(),
        hex::decode("77c64281433f04ecea09a7cd230a7951ff2016e68d96bf2daab152988293c563000000000000000000000000000000000000000000000000000000000000001c0776816d465d60179597a60c8d95dd8714583f02ac5e123f39326c8b7dfac46376045f59acd11a353aacc0f8257eceaf25e6a2c24bc73ef4fcf871a61abdd966").unwrap(),
        hex::decode("a2b3a154b0ed64ff53ffc88c6cf52a1ab834aaf429c2a62df650bdf3763c99b5000000000000000000000000000000000000000000000000000000000000001bd86cd195f503ca0edf8d435923c9d12a84b71db77beb698b095a88d55ddad28f3d508badb716d2f7266adfdb4eece4c47cc5baeb72fa55015ff411d786036f03").unwrap(),
    ];

    let expected_address = hex::decode("00000000000000000000000095adb675b730d68e78e510210e494bed64ea24f3").unwrap();

    for input in inputs {
        let recovered = ec_recover_run(&input, 3000).unwrap();
        assert_eq!(recovered.bytes.as_ref(), expected_address);
    }
}
