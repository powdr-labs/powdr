Instructions:
  AND rd_ptr = 8, rs1_ptr = 0, rs2 = 5, rs2_as = 0

APC advantage:
  - Main columns: 36 -> 17 (2.12x reduction)
  - Bus interactions: 20 -> 14 (1.43x reduction)
  - Constraints: 22 -> 14 (1.57x reduction)

// Symbolic machine using 17 unique main columns

// Bus 0 (EXECUTION_BRIDGE):
mult=is_valid * -1, args=[0, writes_aux__base__prev_timestamp_0 + writes_aux__base__timestamp_lt_aux__lower_decomp__0_0 + 131072 * writes_aux__base__timestamp_lt_aux__lower_decomp__1_0 - 1]
mult=is_valid * 1, args=[4, writes_aux__base__prev_timestamp_0 + writes_aux__base__timestamp_lt_aux__lower_decomp__0_0 + 131072 * writes_aux__base__timestamp_lt_aux__lower_decomp__1_0 + 2]

// Bus 1 (MEMORY):
mult=is_valid * -1, args=[1, 0, 0, 0, 0, 0, writes_aux__base__prev_timestamp_0 + writes_aux__base__timestamp_lt_aux__lower_decomp__0_0 + 131072 * writes_aux__base__timestamp_lt_aux__lower_decomp__1_0 - (reads_aux__0__base__timestamp_lt_aux__lower_decomp__0_0 + 131072 * reads_aux__0__base__timestamp_lt_aux__lower_decomp__1_0 + 2)]
mult=is_valid * 1, args=[1, 0, 0, 0, 0, 0, writes_aux__base__prev_timestamp_0 + writes_aux__base__timestamp_lt_aux__lower_decomp__0_0 + 131072 * writes_aux__base__timestamp_lt_aux__lower_decomp__1_0 - 1]
mult=is_valid * -1, args=[1, 8, writes_aux__prev_data__0_0, writes_aux__prev_data__1_0, writes_aux__prev_data__2_0, writes_aux__prev_data__3_0, writes_aux__base__prev_timestamp_0]
mult=is_valid * 1, args=[1, 8, a__0_0, a__1_0, a__2_0, a__3_0, writes_aux__base__prev_timestamp_0 + writes_aux__base__timestamp_lt_aux__lower_decomp__0_0 + 131072 * writes_aux__base__timestamp_lt_aux__lower_decomp__1_0 + 1]

// Bus 3 (VARIABLE_RANGE_CHECKER):
mult=is_valid * 1, args=[reads_aux__0__base__timestamp_lt_aux__lower_decomp__0_0, 17]
mult=is_valid * 1, args=[reads_aux__0__base__timestamp_lt_aux__lower_decomp__1_0, 12]
mult=is_valid * 1, args=[writes_aux__base__timestamp_lt_aux__lower_decomp__0_0, 17]
mult=is_valid * 1, args=[writes_aux__base__timestamp_lt_aux__lower_decomp__1_0, 12]

// Bus 6 (OPENVM_BITWISE_LOOKUP):
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__0_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__0_0 + 5 * opcode_xor_flag_0 + 5 * opcode_or_flag_0 + 5 * opcode_and_flag_0, opcode_xor_flag_0 * a__0_0 + opcode_or_flag_0 * (2 * a__0_0 - 5) + opcode_and_flag_0 * (5 - 2 * a__0_0), 1]
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__1_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__1_0, opcode_xor_flag_0 * a__1_0 + opcode_or_flag_0 * (2 * a__1_0) - opcode_and_flag_0 * (2 * a__1_0), 1]
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__2_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__2_0, opcode_xor_flag_0 * a__2_0 + opcode_or_flag_0 * (2 * a__2_0) - opcode_and_flag_0 * (2 * a__2_0), 1]
mult=is_valid * 1, args=[(1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__3_0, (1 - (opcode_xor_flag_0 + opcode_or_flag_0 + opcode_and_flag_0)) * a__3_0, opcode_xor_flag_0 * a__3_0 + opcode_or_flag_0 * (2 * a__3_0) - opcode_and_flag_0 * (2 * a__3_0), 1]

// Algebraic constraints:
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 - 3 * is_valid) * (opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 - 4) = 0
(4 * is_valid - (2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0)) * (3 - (2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0)) = 0
opcode_xor_flag_0 * (opcode_xor_flag_0 - 1) = 0
opcode_or_flag_0 * (opcode_or_flag_0 - 1) = 0
opcode_and_flag_0 * (opcode_and_flag_0 - 1) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 - 3 * is_valid) * ((7864320 * a__0_0 - 39321600) * (7864320 * a__0_0 - 39321601)) = 0
(4 * is_valid - (2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0)) * ((7864320 * a__0_0 + 39321600) * (7864320 * a__0_0 + 39321601)) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 - 3 * is_valid) * ((30720 * a__0_0 + 7864320 * a__1_0 - 153600) * (30720 * a__0_0 + 7864320 * a__1_0 - 153601)) = 0
(4 * is_valid - (2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0)) * ((30720 * a__0_0 + 7864320 * a__1_0 + 153600) * (30720 * a__0_0 + 7864320 * a__1_0 + 153601)) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 - 3 * is_valid) * ((120 * a__0_0 + 30720 * a__1_0 + 7864320 * a__2_0 - 600) * (120 * a__0_0 + 30720 * a__1_0 + 7864320 * a__2_0 - 601)) = 0
(4 * is_valid - (2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0)) * ((120 * a__0_0 + 30720 * a__1_0 + 7864320 * a__2_0 + 600) * (120 * a__0_0 + 30720 * a__1_0 + 7864320 * a__2_0 + 601)) = 0
(opcode_xor_flag_0 + 2 * opcode_or_flag_0 + 3 * opcode_and_flag_0 - 3 * is_valid) * ((120 * a__1_0 + 30720 * a__2_0 + 7864320 * a__3_0 + 692060158 - 943718400 * a__0_0) * (120 * a__1_0 + 30720 * a__2_0 + 7864320 * a__3_0 + 692060157 - 943718400 * a__0_0)) = 0
(4 * is_valid - (2 * opcode_xor_flag_0 + 3 * opcode_or_flag_0 + 4 * opcode_and_flag_0)) * ((943718400 * a__0_0 + 692060158 - (120 * a__1_0 + 30720 * a__2_0 + 7864320 * a__3_0)) * (943718400 * a__0_0 + 692060157 - (120 * a__1_0 + 30720 * a__2_0 + 7864320 * a__3_0))) = 0
is_valid * (is_valid - 1) = 0