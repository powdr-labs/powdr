[workspace]
members = [
  "bin/host",
  "crates/executor/client",
  "crates/executor/host",
  "crates/mpt",
  "crates/primitives",
  "crates/storage/rpc-db",
  "crates/storage/witness-db",
  "crates/host-bench",
]
exclude = []
resolver = "2"

[workspace.package]
edition = "2021"
repository = "https://github.com/moongate-forks/minimal-reth"
homepage = "https://github.com/moongate-forks/minimal-reth"
exclude = ["**/target"]
version = "0.1.0"

[workspace.dependencies]
bincode_derive = "2.0.0"
eyre = "0.6"
anyhow = { version = "1.0.86", default-features = false }
tracing = { version = "0.1.40", default-features = false }
cfg-if = "1.0.0"
spin = { version = "0.9.8", features = ["mutex"] }
async-trait = "0.1.80"
tokio = { version = "1.44.1", default-features = false, features = [
  "rt",
  "rt-multi-thread",
] }
serde_json = "1.0.94"
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde_with = "3.12.0"
futures = "0.3"
url = "2.3"
thiserror = "1.0.61"
hex-literal = "0.4.1"
rayon = "1.10.0"
rlp = "0.5.2"
bincode = { version = "2.0.0", default-features = false, features = [
  "derive",
  "alloc",
  "serde",
] }
rustc-hash = "2.1.0"

# workspace
openvm-rpc-db = { path = "./crates/storage/rpc-db" }
openvm-witness-db = { path = "./crates/storage/witness-db" }
openvm-client-executor = { path = "./crates/executor/client" }
openvm-host-executor = { path = "./crates/executor/host" }
openvm-mpt = { path = "./crates/mpt" }
openvm-primitives = { path = "./crates/primitives" }
openvm-reth-benchmark = { path = "./crates/host-bench", default-features = false }
# reth
reth-primitives = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-primitives-traits = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-codecs = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-evm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-revm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-node-ethereum = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-evm-ethereum = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-storage-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-trie = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-trie-common = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-chainspec = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-execution-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-execution-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-db = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-ethereum-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false }
reth-ethereum-primitives = { git = "https://github.com/paradigmxyz/reth", tag = "v1.4.8", default-features = false, features = [
  "serde",
  "serde-bincode-compat",
] }

# revm
revm = { version = "24.0.1", features = ["serde"], default-features = false }
revm-primitives = { version = "19.0.0", features = [
  "serde",
], default-features = false }
revm-inspectors = "0.23.0"
revm-interpreter = { version = "20.0.0", default-features = false }
revm-precompile = { version = "21.0.0", default-features = false }

# alloy
alloy-consensus = { version = "1.0.9", default-features = false, features = [
  "serde",
  "serde-bincode-compat",
] }
alloy-primitives = { version = "1.1.0", default-features = false }
alloy-provider = { version = "1.0.9", default-features = false, features = [
  "reqwest",
  "reqwest-rustls-tls",
] }
alloy-rpc-client = { version = "1.0.9", default-features = false, features = [
  "reqwest",
] }
alloy-rpc-types = { version = "1.0.9", default-features = false, features = [
  "eth",
] }
alloy-rlp = "0.3.10"
alloy-transport = { version = "1.0.9" }
alloy-transport-http = { version = "1.0.9", features = [
  "reqwest-rustls-tls",
], default-features = false }
alloy-eips = { version = "1.0.9", default-features = false }
alloy-trie = "0.8.1"
alloy-hardforks = "0.2.7"

openvm-stark-sdk = { git = "https://github.com/openvm-org/stark-backend.git", rev = "f48090c9febd021f8ee0349bc929a775fb1fa3ad", default-features = false }

# openvm
# Note: the openvm-sdk commit does not need to be exactly the same as the `openvm` commit used in the guest program: as long as
# the openvm-sdk commit doesn't change any guest libraries, they are compatible
# This allows us to not update revm and openvm-kzg each time we change openvm-sdk
openvm-build = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-benchmarks-prove = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-keccak256-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-keccak256-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-rv32im-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-rv32im-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-bigint-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-bigint-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-algebra-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-algebra-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-ecc-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-ecc-transpiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-pairing-circuit = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-sdk = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-native-compiler = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }
openvm-native-recursion = { git = "https://github.com/openvm-org/openvm.git", tag = "v1.2.1-rc.1", default-features = false }

# powdr
powdr-openvm = { path = "../openvm", default-features = false }
powdr-riscv-elf = { path = "../riscv-elf", default-features = false }
powdr-number = { path = "../number", default-features = false }
powdr-autoprecompiles = { path = "../autoprecompiles", default-features = false }

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rustdoc.all = "warn"

[profile.release]
lto = "thin"

[profile.profiling]
inherits = "maxperf"
debug = "full"
strip = "none"

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1

[profile.dev]
opt-level = 3

# Copy to config.toml for local patches
# [net]
# git-fetch-with-cli = true

# NORMAL USAGE PATCHES

# This patch should be enabled for "normal" usage.
# Comment it out if you want to use a local stark-backend instead.
# This rev needs to be the same that powdr uses.
[patch."https://github.com/openvm-org/stark-backend.git"]
openvm-stark-backend = { git = "https://github.com/powdr-labs/stark-backend.git", rev = "37c22d2" }
openvm-stark-sdk = { git = "https://github.com/powdr-labs/stark-backend.git", rev = "37c22d2" }

# This patch should be enabled for "normal" usage.
# Comment it out if you want to use a local OpenVM instead (patches below this block).
# This rev needs to be the same that powdr uses.
[patch."https://github.com/openvm-org/openvm.git"]
openvm-benchmarks-prove = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
# OpenVM
openvm-sdk = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
cargo-openvm = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-mod-circuit-builder = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-poseidon2-air = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-circuit-primitives = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-circuit-primitives-derive = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-build = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-instructions = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-instructions-derive = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-macros-common = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-platform = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-circuit-derive = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }

# Extensions
openvm-algebra-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-algebra-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-algebra-guest = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-algebra-moduli-macros = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-algebra-complex-macros = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-bigint-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-bigint-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-bigint-guest = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-ecc-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-ecc-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-ecc-guest = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-ecc-sw-macros = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-keccak256-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-keccak256-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-keccak256-guest = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-sha256-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-sha256-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-sha256-guest = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-native-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-native-compiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-native-compiler-derive = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-native-recursion = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-pairing-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-pairing-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-pairing-guest = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-rv32-adapters = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-rv32im-circuit = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-rv32im-transpiler = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }
openvm-rv32im-guest = { git = "https://github.com/powdr-labs/openvm.git", rev = "815b3cc" }

# LOCAL USAGE PATCHES

# Uncomment the 2 patches below to use a local version of OpenVM.

# Uncomment to use a local version of stark-backend.
# [patch."https://github.com/openvm-org/stark-backend.git"]
# openvm-stark-backend = { path = "../stark-backend/crates/stark-backend" }
# openvm-stark-sdk = { path = "../stark-backend/crates/stark-sdk" }

# Uncomment to use a local version of stark-backend.
# [patch."https://github.com/powdr-labs/stark-backend.git"]
# openvm-stark-backend = { path = "../stark-backend/crates/stark-backend" }
# openvm-stark-sdk = { path = "../stark-backend/crates/stark-sdk" }

# Uncomment the 2 patches below to use a local OpenVM repo.

# Uncomment to use a local version of OpenVM.
# [patch."https://github.com/openvm-org/openvm.git"]
# openvm-benchmarks-prove = { path = "../openvm/benchmarks/prove" }
# # OpenVM
# openvm-sdk = { path = "../openvm/crates/sdk" }
# cargo-openvm = { path = "../openvm/crates/cli" }
# openvm-mod-circuit-builder = { path = "../openvm/crates/circuits/mod-builder/" }
# openvm-poseidon2-air = { path = "../openvm/crates/circuits/poseidon2-air" }
# openvm-circuit-primitives = { path = "../openvm/crates/circuits/primitives" }
# openvm-circuit-primitives-derive = { path = "../openvm/crates/circuits/primitives/derive" }
# openvm = { path = "../openvm/crates/toolchain/openvm" }
# openvm-build = { path = "../openvm/crates/toolchain/build" }
# openvm-instructions = { path = "../openvm/crates/toolchain/instructions" }
# openvm-instructions-derive = { path = "../openvm/crates/toolchain/instructions/derive" }
# openvm-macros-common = { path = "../openvm/crates/toolchain/macros" }
# openvm-platform = { path = "../openvm/crates/toolchain/platform" }
# openvm-transpiler = { path = "../openvm/crates/toolchain/transpiler" }
# openvm-circuit = { path = "../openvm/crates/vm" }
# openvm-circuit-derive = { path = "../openvm/crates/vm/derive" }
#
# # Extensions
# openvm-algebra-transpiler = { path = "../openvm/extensions/algebra/transpiler" }
# openvm-algebra-circuit = { path = "../openvm/extensions/algebra/circuit" }
# openvm-algebra-guest = { path = "../openvm/extensions/algebra/guest" }
# openvm-algebra-moduli-macros = { path = "../openvm/extensions/algebra/moduli-macros/" }
# openvm-algebra-complex-macros = { path = "../openvm/extensions/algebra/complex-macros/" }
# openvm-bigint-circuit = { path = "../openvm/extensions/bigint/circuit" }
# openvm-bigint-transpiler = { path = "../openvm/extensions/bigint/transpiler" }
# openvm-bigint-guest = { path = "../openvm/extensions/bigint/guest" }
# openvm-ecc-circuit = { path = "../openvm/extensions/ecc/circuit" }
# openvm-ecc-transpiler = { path = "../openvm/extensions/ecc/transpiler/" }
# openvm-ecc-guest = { path = "../openvm/extensions/ecc/guest/" }
# openvm-ecc-sw-macros = { path = "../openvm/extensions/ecc/sw-macros/" }
# openvm-keccak256-circuit = { path = "../openvm/extensions/keccak256/circuit" }
# openvm-keccak256-transpiler = { path = "../openvm/extensions/keccak256/transpiler" }
# openvm-keccak256-guest = { path = "../openvm/extensions/keccak256/guest" }
# openvm-sha256-circuit = { path = "../openvm/extensions/sha256/circuit" }
# openvm-sha256-transpiler = { path = "../openvm/extensions/sha256/transpiler" }
# openvm-sha256-guest = { path = "../openvm/extensions/sha256/guest" }
# openvm-native-circuit = { path = "../openvm/extensions/native/circuit" }
# openvm-native-compiler = { path = "../openvm/extensions/native/compiler" }
# openvm-native-compiler-derive = { path = "../openvm/extensions/native/compiler/derive" }
# openvm-native-recursion = { path = "../openvm/extensions/native/recursion" }
# openvm-pairing-circuit = { path = "../openvm/extensions/pairing/circuit" }
# openvm-pairing-transpiler = { path = "../openvm/extensions/pairing/transpiler" }
# openvm-pairing-guest = { path = "../openvm/extensions/pairing/guest" }
# openvm-rv32-adapters = { path = "../openvm/extensions/rv32-adapters/" }
# openvm-rv32im-circuit = { path = "../openvm/extensions/rv32im/circuit/" }
# openvm-rv32im-transpiler = { path = "../openvm/extensions/rv32im/transpiler" }
# openvm-rv32im-guest = { path = "../openvm/extensions/rv32im/guest" }
#
# # Uncomment to use a local version of OpenVM.
# [patch."https://github.com/powdr-labs/openvm.git"]
# openvm-benchmarks-prove = { path = "../openvm/benchmarks/prove" }
# # OpenVM
# openvm-sdk = { path = "../openvm/crates/sdk" }
# cargo-openvm = { path = "../openvm/crates/cli" }
# openvm-mod-circuit-builder = { path = "../openvm/crates/circuits/mod-builder/" }
# openvm-poseidon2-air = { path = "../openvm/crates/circuits/poseidon2-air" }
# openvm-circuit-primitives = { path = "../openvm/crates/circuits/primitives" }
# openvm-circuit-primitives-derive = { path = "../openvm/crates/circuits/primitives/derive" }
# openvm = { path = "../openvm/crates/toolchain/openvm" }
# openvm-build = { path = "../openvm/crates/toolchain/build" }
# openvm-instructions = { path = "../openvm/crates/toolchain/instructions" }
# openvm-instructions-derive = { path = "../openvm/crates/toolchain/instructions/derive" }
# openvm-macros-common = { path = "../openvm/crates/toolchain/macros" }
# openvm-platform = { path = "../openvm/crates/toolchain/platform" }
# openvm-transpiler = { path = "../openvm/crates/toolchain/transpiler" }
# openvm-circuit = { path = "../openvm/crates/vm" }
# openvm-circuit-derive = { path = "../openvm/crates/vm/derive" }
#
# # Extensions
# openvm-algebra-transpiler = { path = "../openvm/extensions/algebra/transpiler" }
# openvm-algebra-circuit = { path = "../openvm/extensions/algebra/circuit" }
# openvm-algebra-guest = { path = "../openvm/extensions/algebra/guest" }
# openvm-algebra-moduli-macros = { path = "../openvm/extensions/algebra/moduli-macros/" }
# openvm-algebra-complex-macros = { path = "../openvm/extensions/algebra/complex-macros/" }
# openvm-bigint-circuit = { path = "../openvm/extensions/bigint/circuit" }
# openvm-bigint-transpiler = { path = "../openvm/extensions/bigint/transpiler" }
# openvm-bigint-guest = { path = "../openvm/extensions/bigint/guest" }
# openvm-ecc-circuit = { path = "../openvm/extensions/ecc/circuit" }
# openvm-ecc-transpiler = { path = "../openvm/extensions/ecc/transpiler/" }
# openvm-ecc-guest = { path = "../openvm/extensions/ecc/guest/" }
# openvm-ecc-sw-macros = { path = "../openvm/extensions/ecc/sw-macros/" }
# openvm-keccak256-circuit = { path = "../openvm/extensions/keccak256/circuit" }
# openvm-keccak256-transpiler = { path = "../openvm/extensions/keccak256/transpiler" }
# openvm-keccak256-guest = { path = "../openvm/extensions/keccak256/guest" }
# openvm-sha256-circuit = { path = "../openvm/extensions/sha256/circuit" }
# openvm-sha256-transpiler = { path = "../openvm/extensions/sha256/transpiler" }
# openvm-sha256-guest = { path = "../openvm/extensions/sha256/guest" }
# openvm-native-circuit = { path = "../openvm/extensions/native/circuit" }
# openvm-native-compiler = { path = "../openvm/extensions/native/compiler" }
# openvm-native-compiler-derive = { path = "../openvm/extensions/native/compiler/derive" }
# openvm-native-recursion = { path = "../openvm/extensions/native/recursion" }
# openvm-pairing-circuit = { path = "../openvm/extensions/pairing/circuit" }
# openvm-pairing-transpiler = { path = "../openvm/extensions/pairing/transpiler" }
# openvm-pairing-guest = { path = "../openvm/extensions/pairing/guest" }
# openvm-rv32-adapters = { path = "../openvm/extensions/rv32-adapters/" }
# openvm-rv32im-circuit = { path = "../openvm/extensions/rv32im/circuit/" }
# openvm-rv32im-transpiler = { path = "../openvm/extensions/rv32im/transpiler" }
# openvm-rv32im-guest = { path = "../openvm/extensions/rv32im/guest" }
