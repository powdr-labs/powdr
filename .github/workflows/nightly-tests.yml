name: Nightly tests
on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *" # run at 2 AM UTC

env:
  CARGO_TERM_COLOR: always
  IS_NIGHTLY_TEST: true
  POWDR_GENERATE_PROOFS: "true"
  RUSTFLAGS: "-C target-cpu=native"
  JEMALLOC_SYS_WITH_MALLOC_CONF: "retain:true,background_thread:true,metadata_thp:always,thp:always,dirty_decay_ms:-1,muzzy_decay_ms:-1,abort_conf:true"

jobs:
  check_if_needs_running:
    runs-on: ubuntu-24.04
    outputs:
      status: ${{ steps.count.outputs.status }}

    steps:
      - uses: actions/checkout@v4
      - name: Count recent commits
        id: count
        run: echo "status=$(git log --oneline --since '24 hours ago' | wc -l)" >> $GITHUB_OUTPUT

  udeps:
    runs-on: ubuntu-22.04
    needs: check_if_needs_running
    if: needs.check_if_needs_running.outputs.status > 0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Run cargo-udeps
        uses: aig787/cargo-udeps-action@v1
        with:
          version: "latest"
          args: "--all-targets"

  test_release:
    runs-on: ubuntu-24.04
    needs: check_if_needs_running
    if: needs.check_if_needs_running.outputs.status > 0

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⚡ Cache rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain 1.85
        run: rustup toolchain install 1.85
      - name: Install nightly
        run: rustup toolchain install nightly-2025-05-14 --component rust-src
      - name: Install nightly
        run: rustup toolchain install nightly-2025-02-14 --component rust-src
      - name: Install riscv target
        run: rustup target add riscv32imac-unknown-none-elf --toolchain nightly-2025-05-14
      - name: Install test dependencies
        run: sudo apt-get update && sudo apt-get install -y binutils-riscv64-unknown-elf lld
      - name: Build
        run: cargo build --all --release --all-features
      - name: Run tests
        run: cargo test --all --release --verbose --all-features --exclude powdr-openvm -- --include-ignored --nocapture --test-threads=2

  bench:
    runs-on: warp-ubuntu-2404-x64-4x
    permissions:
      contents: write
      deployments: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⚡ Restore rust cache
        id: cache
        uses: WarpBuilds/cache/restore@v1
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            Cargo.lock
          key: ${{ runner.os }}-cargo-pr-tests
      - name: Install Rust toolchain nightly-2025-05-14 (with clippy and rustfmt)
        run: rustup toolchain install nightly-2025-05-14 --component clippy,rustfmt,rust-src
      - name: Install Rust toolchain 1.85
        run: rustup toolchain install 1.85
      - name: Install riscv target
        run: rustup target add riscv32imac-unknown-none-elf --toolchain nightly-2025-05-14
      - name: Install test dependencies
        run: sudo apt-get update && sudo apt-get install -y binutils-riscv64-unknown-elf lld
      - name: Run benchmarks
        # we add `|| exit 1` to make sure the step fails if `cargo bench` fails
        run: cargo bench --workspace --all-features -- --output-format bencher | tee output.txt || exit 1
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Benchmarks
          tool: "cargo"
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          alert-threshold: "120%"
          comment-on-alert: true
          summary-always: true

  test_apc:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⚡ Cache rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.toml') }}
      - name: Build
        run: cargo build --release -p powdr-openvm
      - name: Run tests
        run: cargo test --release --verbose -p powdr-openvm -- --include-ignored --nocapture --test-threads=16
